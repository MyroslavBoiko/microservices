server:
    port: ${RESOURCE_SERVICE_PORT:8082}
spring:
    application:
        name: resource-service
    servlet:
        multipart:
            max-file-size: 10MB
            max-request-size: 10MB
    datasource:
        url: ${DB_CONNECTION_URL:jdbc:postgresql://localhost:5432}/${DB_NAME:resource}
        username: ${DB_USERNAME:postgres}
        password: ${DB_PASSWORD:postgres}
    jpa:
        database: postgresql
        hibernate:
            ddl-auto: create-drop
        properties:
            hibernate:
                jdbc:
                    lob:
                        non_contextual_creation: true
    kafka:
        bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.apache.kafka.common.serialization.StringSerializer
aws:
    s3:
        url: ${AWS_S3_URL:http://127.0.0.1:4566}
        region: ${AWS_S3_REGION:eu-central-1}
        bucket-name: ${AWS_S3_BUCKET_NAME:uploads}
        access-key: ${AWS_S3_ACCESS_KEY:localstack}
        secret-key: ${AWS_S3_SECRET_KEY:localstack}
eureka:
    client:
        serviceUrl:
            defaultZone: ${EUREKA_URI:http://localhost:8085/eureka}
    instance:
        preferIpAddress: true